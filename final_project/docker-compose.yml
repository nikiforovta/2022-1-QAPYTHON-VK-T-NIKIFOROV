services:
  db:
    networks:
      final_network: null
    container_name: SQLQA
    environment:
      - MYSQL_ROOT_PASSWORD=1111
      - MYSQL_DATABASE=vkeducation
      - MYSQL_USER=test_qa
      - MYSQL_PASSWORD=qa_test
    ports:
      - 3306:3306
    image: "mysql"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"-uroot", "-p1111", "ping", "-h", "SQLQA" ]
      timeout: 10s
      retries: 30

  vk_api:
    networks:
      final_network: null
    container_name: vk_mock
    ports:
      - 8543:8543
    build: ./vk_mock

  myapp:
    networks:
      final_network: null
    volumes:
      - "./CONFIG:/myapp_config"
    container_name: myapp
    ports:
      - 8081:8081
    image: "myapp"
    entrypoint: /app/myapp --config=/myapp_config/myapp.conf
    depends_on:
      db:
        condition: service_healthy
      vk_api:
        condition: service_started

  selenoid:
    networks:
      final_network: null
    container_name: selenoid
    image: "aerokube/selenoid:latest-release"
    ports:
      - 4444:4444
    volumes:
      - "./selenoid_config:/etc/selenoid/"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./selenoid_config/logs:/opt/selenoid/logs"
    command: [ "-conf", "/etc/selenoid/browsers.json", "-log-output-dir", "/opt/selenoid/logs", "-container-network", "final_network" ]

  selenoid-ui:
    networks:
      final_network: null
    container_name: selenoid-ui
    image: "aerokube/selenoid-ui"
    ports:
      - 8082:8080
    command: [ "--selenoid-uri", "http://selenoid:4444" ]

  tests:
    networks:
      final_network: null
    container_name: tests
    image: "python_test:latest"
    volumes:
      - "./tests/:/tests"
      - "../allure-results:/tmp/allure"
    entrypoint: bash /tests/start_tests.sh
    depends_on:
      selenoid:
        condition: service_started
      myapp:
        condition: service_started

networks:
  final_network:
    external:
      name: final_network